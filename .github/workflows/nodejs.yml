name: Node CI

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install
        env:
          CI: "true"

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  release:
    needs: tests
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')
    steps:
      - uses: actions/checkout@v4

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: pnpm-deps-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-deps-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm install --frozen-lockfile
          pnpm build
          npx auto shipit
